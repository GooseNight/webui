#!/usr/bin/python3

import sys
import json
from pathlib import Path
import argparse
from os import mkdir

strings = {
    "404": """
import { NotFound as NotFoundStory } from "@/component-library/Pages/Helpers/NotFound";
export default function NotFound() {
    return <NotFoundStory />
}
""",
    "page": """
'use client';
export default function Page() {
    return (
        <div>
            <h1>Page</h1>
        </div>
    )
}
"""
}

def create_file(name: str, rootdir: Path, contents: str) -> None:
    print("Creating file", name, "in", rootdir)
    try:
        with open(rootdir.joinpath(name), "x") as f:
            f.write(contents)
    except FileExistsError:
        print("File already exists, skipping")

def create_folder(name: str, rootdir: Path) -> None:
    print("Creating folder", name, "in", rootdir)
    try:
        mkdir(rootdir.joinpath(name))
    except FileExistsError:
        print("Folder already exists, skipping")

def recursive_func(route: dict, rootdir: Path) -> None:
    name, contents = route["name"], route["contents"]
    create_folder(name, rootdir)
    if contents:
        # Create special files at location
        for special in route.get("special", []):
            if special["type"] == "404":
                create_file("not-found.tsx", rootdir, strings["404"])
        for route in contents:
            recursive_func(route, rootdir.joinpath(route["name"]))
    else:
        create_file("page.tsx", rootdir, strings["page"])

if __name__ == "__main__":
    # argparse
    parser = argparse.ArgumentParser(description="Create a bulk of folders and files for routing")
    parser.add_argument("rootdir", help="The root directory to create the folders in")

    args = parser.parse_args()

    # Parse Stdin JSON input
    text_input = sys.stdin.read()
    json_input: dict = json.loads(text_input)

    location = Path(args.rootdir)
    for route in json_input["contents"]:
        recursive_func(route, location.joinpath(route["name"]))